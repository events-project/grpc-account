// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String   @id
  credits   BigInt   @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  secret Secret[]

  CreditUsage CreditUsage[]
}

model Secret {
  id        String     @id
  type      SecretType
  secret    String     @unique
  hash      String     @unique
  accountId String
  isActive  Boolean
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  expiresAt DateTime?

  account Account @relation(fields: [accountId], references: [id])
}

model CreditUsage {
  id        String    @id
  appId     String
  type      UsageType
  credits   BigInt    @default(0)
  createdAt DateTime  @default(now())

  account Account @relation(fields: [appId], references: [id])
}

model PeriodCreditUsage {
  id            String        @id @default(uuid())
  appId         String
  start         DateTime
  end           DateTime
  credits       BigInt        @default(0)
  paymentStatus PaymentStatus @default(PENDING)
  paymentId     String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@unique([appId, start, end])
}

enum SecretType {
  SECRET_KEY
  PUBLISHABLE_KEY
}

enum UsageType {
  EVENT
  WEBHOOK
  API_CALL
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}
